{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "df66d948",
   "metadata": {},
   "source": [
    "# SubsetMask Tutorial Vignette"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ef3ed1ac",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Libraries needed for the tutorial\n",
    "import pandas as pd\n",
    "from pathlib import Path\n",
    "import subsetmask"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0d545966",
   "metadata": {},
   "source": [
    "## 1. From METADATA to IMAGE "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "93dfa73f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fov</th>\n",
       "      <th>Area</th>\n",
       "      <th>AspectRatio</th>\n",
       "      <th>x_FOV_px</th>\n",
       "      <th>y_FOV_px</th>\n",
       "      <th>Width</th>\n",
       "      <th>Height</th>\n",
       "      <th>Mean.PanCK</th>\n",
       "      <th>Max.PanCK</th>\n",
       "      <th>Mean.CD68</th>\n",
       "      <th>...</th>\n",
       "      <th>sample</th>\n",
       "      <th>condition</th>\n",
       "      <th>integrated_clusters</th>\n",
       "      <th>seurat_clusters</th>\n",
       "      <th>nCount_niche</th>\n",
       "      <th>nFeature_niche</th>\n",
       "      <th>niches_k5</th>\n",
       "      <th>InSituTypeIDs</th>\n",
       "      <th>cell_type</th>\n",
       "      <th>niche_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>c_1_100_10</th>\n",
       "      <td>100</td>\n",
       "      <td>904</td>\n",
       "      <td>0.28</td>\n",
       "      <td>3038</td>\n",
       "      <td>8</td>\n",
       "      <td>61</td>\n",
       "      <td>17</td>\n",
       "      <td>3633</td>\n",
       "      <td>11528</td>\n",
       "      <td>618</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>ATI</td>\n",
       "      <td>Macrophage</td>\n",
       "      <td>Alverolar-Capillary</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_100</th>\n",
       "      <td>100</td>\n",
       "      <td>7195</td>\n",
       "      <td>0.58</td>\n",
       "      <td>38</td>\n",
       "      <td>555</td>\n",
       "      <td>76</td>\n",
       "      <td>132</td>\n",
       "      <td>6092</td>\n",
       "      <td>23024</td>\n",
       "      <td>572</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>Myofibroblast</td>\n",
       "      <td>Vascular Endothelial</td>\n",
       "      <td>Alverolar-Capillary</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1001</th>\n",
       "      <td>100</td>\n",
       "      <td>7678</td>\n",
       "      <td>0.70</td>\n",
       "      <td>4144</td>\n",
       "      <td>4105</td>\n",
       "      <td>125</td>\n",
       "      <td>87</td>\n",
       "      <td>1513</td>\n",
       "      <td>3132</td>\n",
       "      <td>582</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>T_Cytotoxic</td>\n",
       "      <td>T</td>\n",
       "      <td>Lymphoid_Enriched</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1004</th>\n",
       "      <td>100</td>\n",
       "      <td>2188</td>\n",
       "      <td>0.95</td>\n",
       "      <td>4032</td>\n",
       "      <td>4097</td>\n",
       "      <td>65</td>\n",
       "      <td>62</td>\n",
       "      <td>1601</td>\n",
       "      <td>3648</td>\n",
       "      <td>1373</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>T_Cytotoxic</td>\n",
       "      <td>T</td>\n",
       "      <td>Lymphoid_Enriched</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1005</th>\n",
       "      <td>100</td>\n",
       "      <td>7236</td>\n",
       "      <td>0.93</td>\n",
       "      <td>3960</td>\n",
       "      <td>4134</td>\n",
       "      <td>105</td>\n",
       "      <td>113</td>\n",
       "      <td>3065</td>\n",
       "      <td>21596</td>\n",
       "      <td>704</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>T_Cytotoxic</td>\n",
       "      <td>T</td>\n",
       "      <td>Lymphoid_Enriched</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_171_26</th>\n",
       "      <td>171</td>\n",
       "      <td>2214</td>\n",
       "      <td>0.86</td>\n",
       "      <td>4225</td>\n",
       "      <td>25</td>\n",
       "      <td>59</td>\n",
       "      <td>51</td>\n",
       "      <td>813</td>\n",
       "      <td>1876</td>\n",
       "      <td>502</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Macrophage</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_211_1199</th>\n",
       "      <td>211</td>\n",
       "      <td>1923</td>\n",
       "      <td>0.46</td>\n",
       "      <td>1421</td>\n",
       "      <td>1651</td>\n",
       "      <td>76</td>\n",
       "      <td>35</td>\n",
       "      <td>2056</td>\n",
       "      <td>2804</td>\n",
       "      <td>670</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_189_1056</th>\n",
       "      <td>189</td>\n",
       "      <td>1143</td>\n",
       "      <td>0.85</td>\n",
       "      <td>832</td>\n",
       "      <td>1418</td>\n",
       "      <td>45</td>\n",
       "      <td>53</td>\n",
       "      <td>2509</td>\n",
       "      <td>2848</td>\n",
       "      <td>782</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_206_2593</th>\n",
       "      <td>206</td>\n",
       "      <td>5240</td>\n",
       "      <td>0.68</td>\n",
       "      <td>1334</td>\n",
       "      <td>3990</td>\n",
       "      <td>73</td>\n",
       "      <td>108</td>\n",
       "      <td>1633</td>\n",
       "      <td>2312</td>\n",
       "      <td>890</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_59_9</th>\n",
       "      <td>59</td>\n",
       "      <td>1773</td>\n",
       "      <td>0.51</td>\n",
       "      <td>4224</td>\n",
       "      <td>15</td>\n",
       "      <td>61</td>\n",
       "      <td>31</td>\n",
       "      <td>1261</td>\n",
       "      <td>1888</td>\n",
       "      <td>450</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>345085 rows × 94 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              fov  Area  AspectRatio  x_FOV_px  y_FOV_px  Width  Height  \\\n",
       "c_1_100_10    100   904         0.28      3038         8     61      17   \n",
       "c_1_100_100   100  7195         0.58        38       555     76     132   \n",
       "c_1_100_1001  100  7678         0.70      4144      4105    125      87   \n",
       "c_1_100_1004  100  2188         0.95      4032      4097     65      62   \n",
       "c_1_100_1005  100  7236         0.93      3960      4134    105     113   \n",
       "...           ...   ...          ...       ...       ...    ...     ...   \n",
       "c_1_171_26    171  2214         0.86      4225        25     59      51   \n",
       "c_1_211_1199  211  1923         0.46      1421      1651     76      35   \n",
       "c_1_189_1056  189  1143         0.85       832      1418     45      53   \n",
       "c_1_206_2593  206  5240         0.68      1334      3990     73     108   \n",
       "c_1_59_9       59  1773         0.51      4224        15     61      31   \n",
       "\n",
       "              Mean.PanCK  Max.PanCK  Mean.CD68  ...    sample  condition  \\\n",
       "c_1_100_10          3633      11528        618  ...  sample_1         CF   \n",
       "c_1_100_100         6092      23024        572  ...  sample_1         CF   \n",
       "c_1_100_1001        1513       3132        582  ...  sample_1         CF   \n",
       "c_1_100_1004        1601       3648       1373  ...  sample_1         CF   \n",
       "c_1_100_1005        3065      21596        704  ...  sample_1         CF   \n",
       "...                  ...        ...        ...  ...       ...        ...   \n",
       "c_1_171_26           813       1876        502  ...  sample_2       CTRL   \n",
       "c_1_211_1199        2056       2804        670  ...  sample_2       CTRL   \n",
       "c_1_189_1056        2509       2848        782  ...  sample_2       CTRL   \n",
       "c_1_206_2593        1633       2312        890  ...  sample_2       CTRL   \n",
       "c_1_59_9            1261       1888        450  ...  sample_1         CF   \n",
       "\n",
       "              integrated_clusters  seurat_clusters  nCount_niche  \\\n",
       "c_1_100_10                      9                9            30   \n",
       "c_1_100_100                     3                3            30   \n",
       "c_1_100_1001                    2                2            30   \n",
       "c_1_100_1004                    2                2            30   \n",
       "c_1_100_1005                    2                2            30   \n",
       "...                           ...              ...           ...   \n",
       "c_1_171_26                      9                9            30   \n",
       "c_1_211_1199                    1                1            30   \n",
       "c_1_189_1056                    1                1            30   \n",
       "c_1_206_2593                    1                1            30   \n",
       "c_1_59_9                        1                1            30   \n",
       "\n",
       "              nFeature_niche  niches_k5  InSituTypeIDs             cell_type  \\\n",
       "c_1_100_10                 6          2            ATI            Macrophage   \n",
       "c_1_100_100                4          2  Myofibroblast  Vascular Endothelial   \n",
       "c_1_100_1001               6          4    T_Cytotoxic                     T   \n",
       "c_1_100_1004               5          4    T_Cytotoxic                     T   \n",
       "c_1_100_1005               4          4    T_Cytotoxic                     T   \n",
       "...                      ...        ...            ...                   ...   \n",
       "c_1_171_26                 5          1       B_Plasma            Macrophage   \n",
       "c_1_211_1199               3          1       B_Plasma                Plasma   \n",
       "c_1_189_1056               4          1       B_Plasma                Plasma   \n",
       "c_1_206_2593               4          1       B_Plasma                Plasma   \n",
       "c_1_59_9                   4          1       B_Plasma                Plasma   \n",
       "\n",
       "                               niche_name  \n",
       "c_1_100_10            Alverolar-Capillary  \n",
       "c_1_100_100           Alverolar-Capillary  \n",
       "c_1_100_1001            Lymphoid_Enriched  \n",
       "c_1_100_1004            Lymphoid_Enriched  \n",
       "c_1_100_1005            Lymphoid_Enriched  \n",
       "...                                   ...  \n",
       "c_1_171_26    Tertiary_Lymphoid_Structure  \n",
       "c_1_211_1199  Tertiary_Lymphoid_Structure  \n",
       "c_1_189_1056  Tertiary_Lymphoid_Structure  \n",
       "c_1_206_2593  Tertiary_Lymphoid_Structure  \n",
       "c_1_59_9      Tertiary_Lymphoid_Structure  \n",
       "\n",
       "[345085 rows x 94 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the metadata CSV file\n",
    "meta = pd.read_csv(\"test/slide_1_metadata_niches.csv\", index_col=0, header=0) \n",
    "# Display the first few rows of the DataFrame\n",
    "meta"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff58b579",
   "metadata": {},
   "source": [
    "We use `plot_image` to generate the png that we will use for subsetting the object. The argument `group_col` will use a metadata column to colour the dots in the plot, if `group_col=None` all dots will be coloured black"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cea98a07",
   "metadata": {},
   "source": [
    "with `group_col=None`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c44d1212",
   "metadata": {},
   "outputs": [],
   "source": [
    "subsetmask.save_image(metadata_df=meta, \n",
    "           images_col='slide',\n",
    "           image_name='slide_1',\n",
    "           x_col='x_slide_mm', \n",
    "           y_col='y_slide_mm', \n",
    "           group_col=None, \n",
    "           output_path='test/slide_1/plot.png', \n",
    "           figsize=(30, 50), \n",
    "           dpi=1200, \n",
    "           dot_size=1, \n",
    "           cmap='tab20')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7c92d190",
   "metadata": {},
   "source": [
    "with `group_col=\"niche_name\"`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e4fb7dc5",
   "metadata": {},
   "outputs": [],
   "source": [
    "subsetmask.save_image(metadata_df=meta, \n",
    "           images_col='slide',\n",
    "           image_name='slide_1',\n",
    "           x_col='x_slide_mm', \n",
    "           y_col='y_slide_mm', \n",
    "           group_col='niche_name', \n",
    "           output_path='test/slide_1/plot_coloured.png', \n",
    "           figsize=(30, 50), \n",
    "           dpi=1200, \n",
    "           dot_size=1, \n",
    "           cmap='tab20')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0336a8fa",
   "metadata": {},
   "source": [
    "## 2. From IMAGE to MASK"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "880de86b",
   "metadata": {},
   "source": [
    "Needed libs for this part"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fa0f4419",
   "metadata": {},
   "source": [
    "We need the path of the saved image (.png)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4e01a2bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "image_path = \"test/slide_1/plot_coloured.png\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f5786f7",
   "metadata": {},
   "source": [
    "We use the function `label_image` to visualise the image and label the desired regions. Once we have labelled our image. We minimise the napari window (don't close it yet!)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "12a2008d",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/homebrew/lib/python3.11/site-packages/PIL/Image.py:3442: DecompressionBombWarning: Image size (135000000 pixels) exceeds limit of 89478485 pixels, could be decompression bomb DOS attack.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "labels = subsetmask.label_image(image_path=image_path)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76d84e9a",
   "metadata": {},
   "source": [
    "We then can save the labels as masks with the `save_masks` function to our desired output location. If the location does not exist, it will be created"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "002a3d72",
   "metadata": {},
   "outputs": [],
   "source": [
    "masks_dir = Path(\"test/slide_1/masks\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0fb15c18",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved mask for label 1 at test/slide_1/masks/label_1.png\n",
      "Saved mask for label 2 at test/slide_1/masks/label_2.png\n",
      "All masks saved successfully.\n",
      "All masks saved successfully.\n"
     ]
    }
   ],
   "source": [
    "subsetmask.save_masks(labels, masks_dir)\n",
    "print(\"All masks saved successfully.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69d59df6",
   "metadata": {},
   "source": [
    "After we have saved the masks we can close the Napari window."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a029d6aa",
   "metadata": {},
   "source": [
    "## 3. From MASK to COORDINATES"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1163a8c0",
   "metadata": {},
   "source": [
    "To start we load the metadata"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5b7b6cb3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fov</th>\n",
       "      <th>Area</th>\n",
       "      <th>AspectRatio</th>\n",
       "      <th>x_FOV_px</th>\n",
       "      <th>y_FOV_px</th>\n",
       "      <th>Width</th>\n",
       "      <th>Height</th>\n",
       "      <th>Mean.PanCK</th>\n",
       "      <th>Max.PanCK</th>\n",
       "      <th>Mean.CD68</th>\n",
       "      <th>...</th>\n",
       "      <th>sample</th>\n",
       "      <th>condition</th>\n",
       "      <th>integrated_clusters</th>\n",
       "      <th>seurat_clusters</th>\n",
       "      <th>nCount_niche</th>\n",
       "      <th>nFeature_niche</th>\n",
       "      <th>niches_k5</th>\n",
       "      <th>InSituTypeIDs</th>\n",
       "      <th>cell_type</th>\n",
       "      <th>niche_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>c_1_100_10</th>\n",
       "      <td>100</td>\n",
       "      <td>904</td>\n",
       "      <td>0.28</td>\n",
       "      <td>3038</td>\n",
       "      <td>8</td>\n",
       "      <td>61</td>\n",
       "      <td>17</td>\n",
       "      <td>3633</td>\n",
       "      <td>11528</td>\n",
       "      <td>618</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>ATI</td>\n",
       "      <td>Macrophage</td>\n",
       "      <td>Alverolar-Capillary</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_100</th>\n",
       "      <td>100</td>\n",
       "      <td>7195</td>\n",
       "      <td>0.58</td>\n",
       "      <td>38</td>\n",
       "      <td>555</td>\n",
       "      <td>76</td>\n",
       "      <td>132</td>\n",
       "      <td>6092</td>\n",
       "      <td>23024</td>\n",
       "      <td>572</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>Myofibroblast</td>\n",
       "      <td>Vascular Endothelial</td>\n",
       "      <td>Alverolar-Capillary</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1001</th>\n",
       "      <td>100</td>\n",
       "      <td>7678</td>\n",
       "      <td>0.70</td>\n",
       "      <td>4144</td>\n",
       "      <td>4105</td>\n",
       "      <td>125</td>\n",
       "      <td>87</td>\n",
       "      <td>1513</td>\n",
       "      <td>3132</td>\n",
       "      <td>582</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>T_Cytotoxic</td>\n",
       "      <td>T</td>\n",
       "      <td>Lymphoid_Enriched</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1004</th>\n",
       "      <td>100</td>\n",
       "      <td>2188</td>\n",
       "      <td>0.95</td>\n",
       "      <td>4032</td>\n",
       "      <td>4097</td>\n",
       "      <td>65</td>\n",
       "      <td>62</td>\n",
       "      <td>1601</td>\n",
       "      <td>3648</td>\n",
       "      <td>1373</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>T_Cytotoxic</td>\n",
       "      <td>T</td>\n",
       "      <td>Lymphoid_Enriched</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1005</th>\n",
       "      <td>100</td>\n",
       "      <td>7236</td>\n",
       "      <td>0.93</td>\n",
       "      <td>3960</td>\n",
       "      <td>4134</td>\n",
       "      <td>105</td>\n",
       "      <td>113</td>\n",
       "      <td>3065</td>\n",
       "      <td>21596</td>\n",
       "      <td>704</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>T_Cytotoxic</td>\n",
       "      <td>T</td>\n",
       "      <td>Lymphoid_Enriched</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_171_26</th>\n",
       "      <td>171</td>\n",
       "      <td>2214</td>\n",
       "      <td>0.86</td>\n",
       "      <td>4225</td>\n",
       "      <td>25</td>\n",
       "      <td>59</td>\n",
       "      <td>51</td>\n",
       "      <td>813</td>\n",
       "      <td>1876</td>\n",
       "      <td>502</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Macrophage</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_211_1199</th>\n",
       "      <td>211</td>\n",
       "      <td>1923</td>\n",
       "      <td>0.46</td>\n",
       "      <td>1421</td>\n",
       "      <td>1651</td>\n",
       "      <td>76</td>\n",
       "      <td>35</td>\n",
       "      <td>2056</td>\n",
       "      <td>2804</td>\n",
       "      <td>670</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_189_1056</th>\n",
       "      <td>189</td>\n",
       "      <td>1143</td>\n",
       "      <td>0.85</td>\n",
       "      <td>832</td>\n",
       "      <td>1418</td>\n",
       "      <td>45</td>\n",
       "      <td>53</td>\n",
       "      <td>2509</td>\n",
       "      <td>2848</td>\n",
       "      <td>782</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_206_2593</th>\n",
       "      <td>206</td>\n",
       "      <td>5240</td>\n",
       "      <td>0.68</td>\n",
       "      <td>1334</td>\n",
       "      <td>3990</td>\n",
       "      <td>73</td>\n",
       "      <td>108</td>\n",
       "      <td>1633</td>\n",
       "      <td>2312</td>\n",
       "      <td>890</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_59_9</th>\n",
       "      <td>59</td>\n",
       "      <td>1773</td>\n",
       "      <td>0.51</td>\n",
       "      <td>4224</td>\n",
       "      <td>15</td>\n",
       "      <td>61</td>\n",
       "      <td>31</td>\n",
       "      <td>1261</td>\n",
       "      <td>1888</td>\n",
       "      <td>450</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>345085 rows × 94 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              fov  Area  AspectRatio  x_FOV_px  y_FOV_px  Width  Height  \\\n",
       "c_1_100_10    100   904         0.28      3038         8     61      17   \n",
       "c_1_100_100   100  7195         0.58        38       555     76     132   \n",
       "c_1_100_1001  100  7678         0.70      4144      4105    125      87   \n",
       "c_1_100_1004  100  2188         0.95      4032      4097     65      62   \n",
       "c_1_100_1005  100  7236         0.93      3960      4134    105     113   \n",
       "...           ...   ...          ...       ...       ...    ...     ...   \n",
       "c_1_171_26    171  2214         0.86      4225        25     59      51   \n",
       "c_1_211_1199  211  1923         0.46      1421      1651     76      35   \n",
       "c_1_189_1056  189  1143         0.85       832      1418     45      53   \n",
       "c_1_206_2593  206  5240         0.68      1334      3990     73     108   \n",
       "c_1_59_9       59  1773         0.51      4224        15     61      31   \n",
       "\n",
       "              Mean.PanCK  Max.PanCK  Mean.CD68  ...    sample  condition  \\\n",
       "c_1_100_10          3633      11528        618  ...  sample_1         CF   \n",
       "c_1_100_100         6092      23024        572  ...  sample_1         CF   \n",
       "c_1_100_1001        1513       3132        582  ...  sample_1         CF   \n",
       "c_1_100_1004        1601       3648       1373  ...  sample_1         CF   \n",
       "c_1_100_1005        3065      21596        704  ...  sample_1         CF   \n",
       "...                  ...        ...        ...  ...       ...        ...   \n",
       "c_1_171_26           813       1876        502  ...  sample_2       CTRL   \n",
       "c_1_211_1199        2056       2804        670  ...  sample_2       CTRL   \n",
       "c_1_189_1056        2509       2848        782  ...  sample_2       CTRL   \n",
       "c_1_206_2593        1633       2312        890  ...  sample_2       CTRL   \n",
       "c_1_59_9            1261       1888        450  ...  sample_1         CF   \n",
       "\n",
       "              integrated_clusters  seurat_clusters  nCount_niche  \\\n",
       "c_1_100_10                      9                9            30   \n",
       "c_1_100_100                     3                3            30   \n",
       "c_1_100_1001                    2                2            30   \n",
       "c_1_100_1004                    2                2            30   \n",
       "c_1_100_1005                    2                2            30   \n",
       "...                           ...              ...           ...   \n",
       "c_1_171_26                      9                9            30   \n",
       "c_1_211_1199                    1                1            30   \n",
       "c_1_189_1056                    1                1            30   \n",
       "c_1_206_2593                    1                1            30   \n",
       "c_1_59_9                        1                1            30   \n",
       "\n",
       "              nFeature_niche  niches_k5  InSituTypeIDs             cell_type  \\\n",
       "c_1_100_10                 6          2            ATI            Macrophage   \n",
       "c_1_100_100                4          2  Myofibroblast  Vascular Endothelial   \n",
       "c_1_100_1001               6          4    T_Cytotoxic                     T   \n",
       "c_1_100_1004               5          4    T_Cytotoxic                     T   \n",
       "c_1_100_1005               4          4    T_Cytotoxic                     T   \n",
       "...                      ...        ...            ...                   ...   \n",
       "c_1_171_26                 5          1       B_Plasma            Macrophage   \n",
       "c_1_211_1199               3          1       B_Plasma                Plasma   \n",
       "c_1_189_1056               4          1       B_Plasma                Plasma   \n",
       "c_1_206_2593               4          1       B_Plasma                Plasma   \n",
       "c_1_59_9                   4          1       B_Plasma                Plasma   \n",
       "\n",
       "                               niche_name  \n",
       "c_1_100_10            Alverolar-Capillary  \n",
       "c_1_100_100           Alverolar-Capillary  \n",
       "c_1_100_1001            Lymphoid_Enriched  \n",
       "c_1_100_1004            Lymphoid_Enriched  \n",
       "c_1_100_1005            Lymphoid_Enriched  \n",
       "...                                   ...  \n",
       "c_1_171_26    Tertiary_Lymphoid_Structure  \n",
       "c_1_211_1199  Tertiary_Lymphoid_Structure  \n",
       "c_1_189_1056  Tertiary_Lymphoid_Structure  \n",
       "c_1_206_2593  Tertiary_Lymphoid_Structure  \n",
       "c_1_59_9      Tertiary_Lymphoid_Structure  \n",
       "\n",
       "[345085 rows x 94 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the metadata CSV file\n",
    "meta = pd.read_csv(\"test/slide_1_metadata_niches.csv\", index_col=0, header=0) \n",
    "# Display the first few rows of the DataFrame\n",
    "meta"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ba8ba569",
   "metadata": {},
   "source": [
    "We use the `get_image_dims` to get the dimensions of the desired image (for scaling)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ae6e9174",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Slide 1 Dimensions: {'x_min': np.float64(0.00144337134), 'y_min': np.float64(-0.50542053089), 'x_max': np.float64(10.985981201804), 'y_max': np.float64(18.2862895684368)}\n"
     ]
    }
   ],
   "source": [
    "# Example usage of get_mask_coords\n",
    "slide_1_dims = subsetmask.get_image_dims(\n",
    "    metadata_df=meta,\n",
    "    images_col=\"slide\",\n",
    "    image_name=\"slide_1\",\n",
    "    x_col=\"x_slide_mm\",\n",
    "    y_col=\"y_slide_mm\"\n",
    ")\n",
    "\n",
    "print(\"Slide 1 Dimensions:\", slide_1_dims)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2a147e4b",
   "metadata": {},
   "source": [
    "Now we beed to transform the contour of our images into coordinates. For that we use the `get_mask_coords` function. Normally we will have more than one mask of which we want the coordinates, so we will have to loop through them. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "79971f13",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['label_2.png', 'label_1.png']\n",
      "[PosixPath('test/slide_1/masks/label_2.png'), PosixPath('test/slide_1/masks/label_1.png')]\n"
     ]
    }
   ],
   "source": [
    "# Define the directory as a Path object\n",
    "masks_dir = Path(\"test/slide_1/masks\")\n",
    "\n",
    "# Get all file names in the directory\n",
    "mask_names = [p.name for p in masks_dir.iterdir() if p.is_file()]\n",
    "print(mask_names)\n",
    "\n",
    "# Get full paths to each mask\n",
    "mask_paths = list(masks_dir.glob(\"*\"))  # Or add filter: masks_dir.glob(\"*.png\")\n",
    "print(mask_paths)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "20348064",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Output directory test/slide_1/coordinates already exists.\n"
     ]
    }
   ],
   "source": [
    "out_dir = Path(\"test/slide_1/coordinates\")\n",
    "\n",
    "if out_dir.exists():\n",
    "    print(f\"Output directory {out_dir} already exists.\")\n",
    "else:\n",
    "    out_dir.mkdir(parents=True, exist_ok=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0cc02815",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing mask: test/slide_1/masks/label_2.png\n",
      "Coordinates have been saved to test/slide_1/coordinates/label_2.csv\n",
      "Processing mask: test/slide_1/masks/label_1.png\n",
      "Coordinates have been saved to test/slide_1/coordinates/label_1.csv\n"
     ]
    }
   ],
   "source": [
    "for mask_path in mask_paths:\n",
    "    print(f\"Processing mask: {mask_path}\")\n",
    "    # Get coordinates for each mask\n",
    "    coords = subsetmask.get_mask_coords(mask_path=mask_path, \n",
    "                             x_min=slide_1_dims[\"x_min\"], \n",
    "                             x_max=slide_1_dims[\"x_max\"], \n",
    "                             y_min=slide_1_dims[\"y_min\"], \n",
    "                             y_max=slide_1_dims[\"y_max\"], \n",
    "                             out=f\"{out_dir}/{mask_path.stem}.csv\")  "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0cbd966",
   "metadata": {},
   "source": [
    "## 4. From COORDINATES to ANNOTATED METADATA"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "989ab7a2",
   "metadata": {},
   "source": [
    "Load metadata to get the full slide coordinates. We use the package `pandas` to load the table."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8018f968",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>fov</th>\n",
       "      <th>Area</th>\n",
       "      <th>AspectRatio</th>\n",
       "      <th>x_FOV_px</th>\n",
       "      <th>y_FOV_px</th>\n",
       "      <th>Width</th>\n",
       "      <th>Height</th>\n",
       "      <th>Mean.PanCK</th>\n",
       "      <th>Max.PanCK</th>\n",
       "      <th>Mean.CD68</th>\n",
       "      <th>...</th>\n",
       "      <th>sample</th>\n",
       "      <th>condition</th>\n",
       "      <th>integrated_clusters</th>\n",
       "      <th>seurat_clusters</th>\n",
       "      <th>nCount_niche</th>\n",
       "      <th>nFeature_niche</th>\n",
       "      <th>niches_k5</th>\n",
       "      <th>InSituTypeIDs</th>\n",
       "      <th>cell_type</th>\n",
       "      <th>niche_name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>c_1_100_10</th>\n",
       "      <td>100</td>\n",
       "      <td>904</td>\n",
       "      <td>0.28</td>\n",
       "      <td>3038</td>\n",
       "      <td>8</td>\n",
       "      <td>61</td>\n",
       "      <td>17</td>\n",
       "      <td>3633</td>\n",
       "      <td>11528</td>\n",
       "      <td>618</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>ATI</td>\n",
       "      <td>Macrophage</td>\n",
       "      <td>Alverolar-Capillary</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_100</th>\n",
       "      <td>100</td>\n",
       "      <td>7195</td>\n",
       "      <td>0.58</td>\n",
       "      <td>38</td>\n",
       "      <td>555</td>\n",
       "      <td>76</td>\n",
       "      <td>132</td>\n",
       "      <td>6092</td>\n",
       "      <td>23024</td>\n",
       "      <td>572</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>Myofibroblast</td>\n",
       "      <td>Vascular Endothelial</td>\n",
       "      <td>Alverolar-Capillary</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1001</th>\n",
       "      <td>100</td>\n",
       "      <td>7678</td>\n",
       "      <td>0.70</td>\n",
       "      <td>4144</td>\n",
       "      <td>4105</td>\n",
       "      <td>125</td>\n",
       "      <td>87</td>\n",
       "      <td>1513</td>\n",
       "      <td>3132</td>\n",
       "      <td>582</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>T_Cytotoxic</td>\n",
       "      <td>T</td>\n",
       "      <td>Lymphoid_Enriched</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1004</th>\n",
       "      <td>100</td>\n",
       "      <td>2188</td>\n",
       "      <td>0.95</td>\n",
       "      <td>4032</td>\n",
       "      <td>4097</td>\n",
       "      <td>65</td>\n",
       "      <td>62</td>\n",
       "      <td>1601</td>\n",
       "      <td>3648</td>\n",
       "      <td>1373</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>T_Cytotoxic</td>\n",
       "      <td>T</td>\n",
       "      <td>Lymphoid_Enriched</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1005</th>\n",
       "      <td>100</td>\n",
       "      <td>7236</td>\n",
       "      <td>0.93</td>\n",
       "      <td>3960</td>\n",
       "      <td>4134</td>\n",
       "      <td>105</td>\n",
       "      <td>113</td>\n",
       "      <td>3065</td>\n",
       "      <td>21596</td>\n",
       "      <td>704</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>T_Cytotoxic</td>\n",
       "      <td>T</td>\n",
       "      <td>Lymphoid_Enriched</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_171_26</th>\n",
       "      <td>171</td>\n",
       "      <td>2214</td>\n",
       "      <td>0.86</td>\n",
       "      <td>4225</td>\n",
       "      <td>25</td>\n",
       "      <td>59</td>\n",
       "      <td>51</td>\n",
       "      <td>813</td>\n",
       "      <td>1876</td>\n",
       "      <td>502</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>30</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Macrophage</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_211_1199</th>\n",
       "      <td>211</td>\n",
       "      <td>1923</td>\n",
       "      <td>0.46</td>\n",
       "      <td>1421</td>\n",
       "      <td>1651</td>\n",
       "      <td>76</td>\n",
       "      <td>35</td>\n",
       "      <td>2056</td>\n",
       "      <td>2804</td>\n",
       "      <td>670</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_189_1056</th>\n",
       "      <td>189</td>\n",
       "      <td>1143</td>\n",
       "      <td>0.85</td>\n",
       "      <td>832</td>\n",
       "      <td>1418</td>\n",
       "      <td>45</td>\n",
       "      <td>53</td>\n",
       "      <td>2509</td>\n",
       "      <td>2848</td>\n",
       "      <td>782</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_206_2593</th>\n",
       "      <td>206</td>\n",
       "      <td>5240</td>\n",
       "      <td>0.68</td>\n",
       "      <td>1334</td>\n",
       "      <td>3990</td>\n",
       "      <td>73</td>\n",
       "      <td>108</td>\n",
       "      <td>1633</td>\n",
       "      <td>2312</td>\n",
       "      <td>890</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_2</td>\n",
       "      <td>CTRL</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_59_9</th>\n",
       "      <td>59</td>\n",
       "      <td>1773</td>\n",
       "      <td>0.51</td>\n",
       "      <td>4224</td>\n",
       "      <td>15</td>\n",
       "      <td>61</td>\n",
       "      <td>31</td>\n",
       "      <td>1261</td>\n",
       "      <td>1888</td>\n",
       "      <td>450</td>\n",
       "      <td>...</td>\n",
       "      <td>sample_1</td>\n",
       "      <td>CF</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>B_Plasma</td>\n",
       "      <td>Plasma</td>\n",
       "      <td>Tertiary_Lymphoid_Structure</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>345085 rows × 94 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              fov  Area  AspectRatio  x_FOV_px  y_FOV_px  Width  Height  \\\n",
       "c_1_100_10    100   904         0.28      3038         8     61      17   \n",
       "c_1_100_100   100  7195         0.58        38       555     76     132   \n",
       "c_1_100_1001  100  7678         0.70      4144      4105    125      87   \n",
       "c_1_100_1004  100  2188         0.95      4032      4097     65      62   \n",
       "c_1_100_1005  100  7236         0.93      3960      4134    105     113   \n",
       "...           ...   ...          ...       ...       ...    ...     ...   \n",
       "c_1_171_26    171  2214         0.86      4225        25     59      51   \n",
       "c_1_211_1199  211  1923         0.46      1421      1651     76      35   \n",
       "c_1_189_1056  189  1143         0.85       832      1418     45      53   \n",
       "c_1_206_2593  206  5240         0.68      1334      3990     73     108   \n",
       "c_1_59_9       59  1773         0.51      4224        15     61      31   \n",
       "\n",
       "              Mean.PanCK  Max.PanCK  Mean.CD68  ...    sample  condition  \\\n",
       "c_1_100_10          3633      11528        618  ...  sample_1         CF   \n",
       "c_1_100_100         6092      23024        572  ...  sample_1         CF   \n",
       "c_1_100_1001        1513       3132        582  ...  sample_1         CF   \n",
       "c_1_100_1004        1601       3648       1373  ...  sample_1         CF   \n",
       "c_1_100_1005        3065      21596        704  ...  sample_1         CF   \n",
       "...                  ...        ...        ...  ...       ...        ...   \n",
       "c_1_171_26           813       1876        502  ...  sample_2       CTRL   \n",
       "c_1_211_1199        2056       2804        670  ...  sample_2       CTRL   \n",
       "c_1_189_1056        2509       2848        782  ...  sample_2       CTRL   \n",
       "c_1_206_2593        1633       2312        890  ...  sample_2       CTRL   \n",
       "c_1_59_9            1261       1888        450  ...  sample_1         CF   \n",
       "\n",
       "              integrated_clusters  seurat_clusters  nCount_niche  \\\n",
       "c_1_100_10                      9                9            30   \n",
       "c_1_100_100                     3                3            30   \n",
       "c_1_100_1001                    2                2            30   \n",
       "c_1_100_1004                    2                2            30   \n",
       "c_1_100_1005                    2                2            30   \n",
       "...                           ...              ...           ...   \n",
       "c_1_171_26                      9                9            30   \n",
       "c_1_211_1199                    1                1            30   \n",
       "c_1_189_1056                    1                1            30   \n",
       "c_1_206_2593                    1                1            30   \n",
       "c_1_59_9                        1                1            30   \n",
       "\n",
       "              nFeature_niche  niches_k5  InSituTypeIDs             cell_type  \\\n",
       "c_1_100_10                 6          2            ATI            Macrophage   \n",
       "c_1_100_100                4          2  Myofibroblast  Vascular Endothelial   \n",
       "c_1_100_1001               6          4    T_Cytotoxic                     T   \n",
       "c_1_100_1004               5          4    T_Cytotoxic                     T   \n",
       "c_1_100_1005               4          4    T_Cytotoxic                     T   \n",
       "...                      ...        ...            ...                   ...   \n",
       "c_1_171_26                 5          1       B_Plasma            Macrophage   \n",
       "c_1_211_1199               3          1       B_Plasma                Plasma   \n",
       "c_1_189_1056               4          1       B_Plasma                Plasma   \n",
       "c_1_206_2593               4          1       B_Plasma                Plasma   \n",
       "c_1_59_9                   4          1       B_Plasma                Plasma   \n",
       "\n",
       "                               niche_name  \n",
       "c_1_100_10            Alverolar-Capillary  \n",
       "c_1_100_100           Alverolar-Capillary  \n",
       "c_1_100_1001            Lymphoid_Enriched  \n",
       "c_1_100_1004            Lymphoid_Enriched  \n",
       "c_1_100_1005            Lymphoid_Enriched  \n",
       "...                                   ...  \n",
       "c_1_171_26    Tertiary_Lymphoid_Structure  \n",
       "c_1_211_1199  Tertiary_Lymphoid_Structure  \n",
       "c_1_189_1056  Tertiary_Lymphoid_Structure  \n",
       "c_1_206_2593  Tertiary_Lymphoid_Structure  \n",
       "c_1_59_9      Tertiary_Lymphoid_Structure  \n",
       "\n",
       "[345085 rows x 94 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load the metadata CSV file\n",
    "meta = pd.read_csv(\"test/slide_1_metadata_niches.csv\", index_col=0, header=0) \n",
    "# Display the first few rows of the DataFrame\n",
    "meta"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "73fa6f1e",
   "metadata": {},
   "source": [
    "If we have multiple slides on out metadata we can use `get_image_coords` to get the coordinates from a specific image (normally a slide)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "fc2ad513",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>x_slide_mm</th>\n",
       "      <th>y_slide_mm</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>c_1_100_10</th>\n",
       "      <td>7.385973</td>\n",
       "      <td>11.973767</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_100</th>\n",
       "      <td>7.025130</td>\n",
       "      <td>11.907973</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1001</th>\n",
       "      <td>7.519003</td>\n",
       "      <td>11.480976</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1004</th>\n",
       "      <td>7.505532</td>\n",
       "      <td>11.481938</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_100_1005</th>\n",
       "      <td>7.496872</td>\n",
       "      <td>11.477488</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_171_26</th>\n",
       "      <td>1.020103</td>\n",
       "      <td>4.454418</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_211_1199</th>\n",
       "      <td>7.341589</td>\n",
       "      <td>1.660291</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_189_1056</th>\n",
       "      <td>0.611989</td>\n",
       "      <td>2.239204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_206_2593</th>\n",
       "      <td>7.331124</td>\n",
       "      <td>1.890870</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>c_1_59_9</th>\n",
       "      <td>9.576289</td>\n",
       "      <td>15.556335</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>345085 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              x_slide_mm  y_slide_mm\n",
       "c_1_100_10      7.385973   11.973767\n",
       "c_1_100_100     7.025130   11.907973\n",
       "c_1_100_1001    7.519003   11.480976\n",
       "c_1_100_1004    7.505532   11.481938\n",
       "c_1_100_1005    7.496872   11.477488\n",
       "...                  ...         ...\n",
       "c_1_171_26      1.020103    4.454418\n",
       "c_1_211_1199    7.341589    1.660291\n",
       "c_1_189_1056    0.611989    2.239204\n",
       "c_1_206_2593    7.331124    1.890870\n",
       "c_1_59_9        9.576289   15.556335\n",
       "\n",
       "[345085 rows x 2 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "slide_1_image_coords = subsetmask.get_image_coords(metadata_df=meta, \n",
    "                                                   images_col=\"slide\", \n",
    "                                                   image_name=\"slide_1\", \n",
    "                                                   x_col=\"x_slide_mm\", \n",
    "                                                   y_col=\"y_slide_mm\")\n",
    "\n",
    "slide_1_image_coords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "def9cbe4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dict_keys(['label_1', 'label_2'])\n"
     ]
    }
   ],
   "source": [
    "mask_coords_dir = Path(\"test/slide_1/coordinates\")\n",
    "mask_coords_dict = subsetmask.make_mask_coords_dict(mask_coords_dir)\n",
    "\n",
    "print(mask_coords_dict.keys())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1cb445d",
   "metadata": {},
   "source": [
    "We use the `get_cell_names` function to get the names/barcodes of the cells that are contained in each of the masks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "d00b495d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dict_keys(['label_1', 'label_2'])\n"
     ]
    }
   ],
   "source": [
    "# test function above\n",
    "cell_names_dict = subsetmask.get_cell_names(image_coords=slide_1_image_coords, \n",
    "                                            x_name=\"x_slide_mm\", \n",
    "                                            y_name=\"y_slide_mm\", \n",
    "                                            mask_coords_dict=mask_coords_dict)\n",
    "print(cell_names_dict.keys())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dbd3e501",
   "metadata": {},
   "source": [
    "(OPTIONAL) We can use the `rename_keys` to assign different names to the labels we gave the masks. E.g. change \"label1\" for \"sample1\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e0bffa6c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Original cell names dictionary keys: dict_keys(['label_1', 'label_2'])\n",
      "Renamed cell names dictionary keys: dict_keys(['sample_1', 'sample_2'])\n"
     ]
    }
   ],
   "source": [
    "# Print the original dictionary keys\n",
    "print(\"Original cell names dictionary keys:\", cell_names_dict.keys())\n",
    "\n",
    "# Rename keys in the cell names dictionary\n",
    "\n",
    "key_mapping = {\n",
    "    \"label_1\": \"sample_1\",\n",
    "    \"label_2\": \"sample_2\",\n",
    "    # Add more mappings as needed\n",
    "}\n",
    "\n",
    "cell_names_dict = subsetmask.rename_keys(original_dict=cell_names_dict, key_mapping=key_mapping)\n",
    "# Print the renamed dictionary\n",
    "print(\"Renamed cell names dictionary keys:\", cell_names_dict.keys())\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fbd1d285",
   "metadata": {},
   "source": [
    "We use the `annotate_metadata` function to map cell names to a column in the metadata (if it does not exist it will create it)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8f9e2307",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sample_test\n",
      "not_assigned    339044\n",
      "sample_1          4242\n",
      "sample_2          1799\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "# test the function above\n",
    "annotated_meta = subsetmask.annotate_metadata(cell_names_dict = cell_names_dict, \n",
    "                                              metadata_df = meta, \n",
    "                                              ann_col_name = \"sample_test\")\n",
    "\n",
    "# get a summary table of the annotated column in metadata\n",
    "summary_table = annotated_meta[\"sample_test\"].value_counts(dropna=False)\n",
    "print(summary_table)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "118ab881",
   "metadata": {},
   "source": [
    "Finally, we use the `export_annotated_metadata()` function to save the annotated metadata. You can choose to export the entire table `(full_metadata=True)` or a trimmed version `(full_metadata=False)` that includes only selected columns. Exporting the full metadata may take significantly longer depending on the size of the dataset, but it requires no additional processing and is ready to be used directly in Seurat or Squidpy objects."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cd4d3ebf",
   "metadata": {},
   "source": [
    "Using the `full_metadata=False` (default) option"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "a5126f09",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Annotated metadata exported to test/slide_1_metadata_annotated_trimmed.csv\n"
     ]
    }
   ],
   "source": [
    "# test function above \n",
    "annotated_cols = \"sample_test\"\n",
    "trimmed_meta_output_path = \"test/slide_1_metadata_annotated_trimmed.csv\"\n",
    "\n",
    "subsetmask.save_annotated_metadata(annotated_meta=annotated_meta, \n",
    "                          keep_cols=annotated_cols, \n",
    "                          output_path=trimmed_meta_output_path, full_metadata=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "df6bf59d",
   "metadata": {},
   "source": [
    "Using the `full_metadata=True` option"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "78f5a11a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Annotated metadata exported to test/slide_1_metadata_annotated_full.csv\n"
     ]
    }
   ],
   "source": [
    "full_meta_output_path = \"test/slide_1_metadata_annotated_full.csv\"\n",
    "\n",
    "subsetmask.save_annotated_metadata(annotated_meta=annotated_meta, \n",
    "                          keep_cols=annotated_cols, \n",
    "                          output_path=full_meta_output_path, \n",
    "                          full_metadata=True)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "cosmx_python",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
